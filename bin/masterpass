#!/bin/bash

# Copyright Â© 2013-2020 by madneon
# http://madneon.com
#
# This script generates a password for your different sites/programs with your
# master password as an "unlock". The usage is as follows:
# Choose and remember "master password" and "reason".
#
# Example:
# Let's assume your master password is: "g00nie!2", and you want a password for
# registering new account at a site "gitlab.com".
# Enter a "g00nie!2" as "master" and "gitlab" as "reason".
# Your generated password is copied to clipboard by default (use "-p" to
# display it instead).
# Your passwords are safe as long as nobody finds out your "master" password.
#
# If you want shorter password type new integer length as parameter.
#
# -------------------------------------------------------------------------------

# Allowed chars in password, it must be 79B long (offset 0-78)
chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-[],.~!@#%^&_+|{}"

# Command line argument - print instead of copying to clipboard
stdout=0
if [ -n "$1" ]; then
	if [ "$1" == "-p" ]; then
		stdout=1
		shift
	fi
fi

# Command line argument - desired password length
if [ -n "$1" ]; then
	l=$1
	if [ "$l" -gt "16" -o "$l" -lt "5" ]; then
		echo "Length must be between 5 and 16"
		exit 1
	fi
else
	l=16
fi

# Read "master" pass
read -p "Enter master password: " -s m
echo

# Read "reason"
read -p "Enter reason: " -s r
echo

# Get 512bit SHA string
s=`echo $m $r|sha512sum|cut -f1 -d" "`

# Basic check if SHA string length is correct
a1=`echo $s|cut -b128`
a2=`echo $s|cut -b129`
if [ "$a1" == "" -o "$a2" != "" ]; then
	echo "Error in encrypted SHA string length"
	exit 1
fi

# Generate password
p=""
for (( i=0; "$i" != "$l" ; i=$((i+1)) )); do
	# SHA string offset
	j=$((128 - 3 - i * 4))
	k=$((j+1))

	# Get two hex bytes
	b1="0x"`echo $s|cut -b$j-$k`

	j=$((j+2))
	k=$((k+2))
	b2=0x`echo $s|cut -b$j-$k`

	# $chars string offset
	b1=$((b1/4))
	b2=$((b2/16))

	d=$((b1+b2))

	# Get the char
	c=`echo $chars|cut -b$d`
	p="$p$c"
done

if [ $stdout == 1 ]; then
	echo "$p"
else
	echo -n "$p"|xclip -selection c
fi

# madneon 2020-12-24
